type Book {
  id: ID!
  title: String!
  author: String!
  reader: String!
  parts: [Part!]!
  download: Download
}

type Part {
  id: ID!
  title: String!
  possition: Uint!
  source: String!
  path: String!
}

type Download {
  id: ID!
  name: String!
  magnet: String!
  state: DownloadState!
  Length: Int64!
  Downloaded: Int64!
}

type Query {
  books(filter: BooksFilter): [Book!]!
  book(id: ID!): Book
}

input BooksFilter {
  search: String
}

type Mutation {
  createBook(input: NewBook!): Book!
}

input NewBook {
  magnet: String!
}

scalar Uint
scalar Int64
scalar DownloadState
